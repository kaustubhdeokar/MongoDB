MongoDB. 

* MongoDB was designed from its inception to be the ultimate data platform for modern application development. JSON’s ubiquity made it the obvious choice for representing data structures in MongoDB’s innovative document data model.


* However, there are several issues that make JSON less than ideal for usage inside of a database.

    * JSON is a text-based format, and text parsing is very slow

    * JSON’s readable format is far from space-efficient, another database concern

    * JSON only supports a limited number of basic data types

In order to make MongoDB JSON-first, but still high-performance and general-purpose, BSON was invented to bridge the gap: a binary representation to store data in JSON format, optimized for speed, space, and flexibility. It’s not dissimilar from other interchange formats like protocol buffers, or thrift, in terms of approach.

* MongoDB stores data in BSON format both internally, and over the network, but that doesn’t mean you can’t think of MongoDB as a JSON database. Anything you can represent in JSON can be natively stored in MongoDB, and retrieved just as easily in JSON.

URI String
> mongodb+srv://user:password@sandbox.y1q6m.mongodb.net/myFirstDatabase
	
Import mongodb data in json

* >  mongoimport --uri `atlas cluster uri` --drop `filename`.json --collection sales 
   * - If --collection is not specified the collection (table name) will take the name of the file. 

Export mongodb data in json

* > mongoexport --uri `Atlas Cluster URI` --collection=`collection name` --out=`filename`.json
	
Import BSON data

* > mongorestore --uri `atlas cluster uri` --drop dump
  
Export BSON data
* > mongodump --uri `Atlas Cluster URI`
	

	
* Using the mongo shell, 
	* Connecting to the mongo shell using URI string. 
	* if we connect to the database 'admin' then we can perform tasks as database administrator. 
	* To use a particular database. -> use db. 
	* To show all the collections from the db -> show collections. 
	* To find a particular entry in db.<collection-name>.find(query)
	* Count a particular query - db.<collection-name>.find(query).count()

Resources : - [mongo db json and bson](https://www.mongodb.com/json-and-bson)
